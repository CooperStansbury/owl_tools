plot(net, vertex.label=V(net)$label,
+      vertex.label.font=2,
+      vertex.label.color="black",
+      vertex.label.cex=1,
+      edge.color="black",
+      edge.arrow.size=.2,
+      edge.label.color="black",
+      edge.label=E(net)$type,
+      layout=l,
+      rescale=T,
+      vertex.color=V(net)$color,
+      vertex.size=nodes$entity.weight*75)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=l,
rescale=T,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode=all),
rescale=T,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
rescale=T,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, modes=all),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(0.1, 0.1))
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(0.2, 0.2))
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(1, 1))
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(.2, .2))
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(.01, .01))
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.curved=.1,
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.curved=runif(),
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.curved=runif(0,1),
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.curved=1,
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.curved=.3,
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.shape=NA,
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color=V(net)$color,
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
colr
colr <- c("#FC8D59", "#bdbdff", "#99D594")
V(net)$color <- colr[as.numeric(as.factor(V(net)$purl))]
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color=V(net)$color,
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color=V(net)$color,
vertex.label.cex=1.5,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color=V(net)$color,
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
legend("bottomleft", legend=levels(as.factor(V(net)$purl))  , col = colr , bty = "n", pch=20 , pt.cex = 3, cex = 1.5, text.col=colr , horiz = FALSE, inset = c(.01, .01))
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color=V(net)$color,
vertex.label.cex=1,
vertex.shape='none',
vertex.size=nodes$entity.weight*75,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
layout=layout_as_tree(net, root=1, mode='all'),
rescale=T)
# add legend
legend("bottomleft",
legend=levels(as.factor(V(net)$purl)),
col = colr,
bty = "n",
pch=20 ,
pt.cex = 3,
cex = 1.5,
text.col=colr,
horiz = FALSE,
inset = c(0.1, 0.1))
# plot
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=l,
rescale=T,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75)
# plot
plot(net, vertex.label=V(net)$label,
vertex.label.font=2,
vertex.label.color="black",
vertex.label.cex=1,
edge.color="black",
edge.arrow.size=.2,
edge.label.color="black",
edge.label=E(net)$type,
layout=l,
rescale=T,
vertex.color=V(net)$color,
vertex.size=nodes$entity.weight*75)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/viz2.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/classes.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
source('~/Desktop/Work/git/aporia/mini_example.R', echo=TRUE)
